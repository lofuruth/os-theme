{"version":3,"sources":["components/Widget/FeedsWall/BigFeedBox.js","components/Widget/FeedsWall/SmallFeedBox.js","components/Widget/FeedsWall/Wrapper.js","components/MainPage/Sections/Banner.js"],"names":["FeedsWall","_this","this","_this$props","props","classes","title","backgroundImg","link","react_default","a","createElement","className","iAmDiv","index_es","container","alignItems","justify","root","style","backgroundImage","onClick","redirectUrl","history","variant","React","Component","withRouter","withStyles","theme","height","backgroundSize","backgroundPosition","backgroundColor","cursor","marginBottom","color","fontWeight","textAlign","left","right","item","direction","sm","data","length","md","BigFeedBox","id","sections","medias","url","refactorTitle","SmallFeedBox","width","padding","description","smallDiv","backgroundRepeat","bigDiv","paddingRight","paddingLeft","Banner","hasFeedsToShow","latestArticle","feeds","react","xs","SingleItem","map","n","concat","marginTop","Wrapper","filter","i","isImgOnlySections"],"mappings":"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","file":"static/js/1.4c6027ce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport {Grid, Typography} from '@material-ui/core';\nimport {withRouter} from \"react-router-dom\";\nimport {redirectUrl} from \"../../../api/ApiUtils\";\n\nconst styles = theme => ({\n    root: {\n        height: '400px',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundColor: '#d3dbe2',\n        cursor: 'pointer',\n        marginBottom: 35,\n    },\n    title: {\n        color: 'white',\n        fontWeight: '900',\n        textAlign: 'center',\n    }, iAmDiv: {}\n});\n\n\nclass FeedsWall extends React.Component {\n\n\n    render() {\n        const {classes, title, backgroundImg, link} = this.props;\n\n        return (\n            <div className={classes.iAmDiv}>\n                <Grid container alignItems={'center'} justify={'center'} className={classes.root} style={{\n                    backgroundImage: 'url(' + backgroundImg + ')'\n                }} onClick={() => redirectUrl(link, this.props.history)}>\n                    <Typography variant={'display1'} className={classes.title}>\n                        {title}\n                    </Typography>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nFeedsWall.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(FeedsWall))","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport {Grid} from '@material-ui/core';\nimport {withRouter} from \"react-router-dom\";\nimport {redirectUrl} from \"../../../api/ApiUtils\";\n\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: '#F6F6F6',\n        cursor: 'pointer',\n        marginBottom: 35,\n\n    },\n});\n\n\nclass FeedsWall extends React.Component {\n    render() {\n        const {classes, left, right, link} = this.props;\n\n        return (\n            <Grid container alignItems={'center'} className={classes.root}\n                  onClick={() => redirectUrl(link, this.props.history)}>\n                <Grid item container direction={'column'} justify={'flex-start'} alignItems={'center'} sm={5}>\n                    {left}\n                </Grid>\n                <Grid item sm={7} container direction={'column'} justify={'flex-end'} alignItems={'center'}>\n                    {right}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nFeedsWall.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(FeedsWall))","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport {Grid, Typography} from '@material-ui/core';\nimport BigFeedBox from './BigFeedBox'\nimport SmallFeedBox from './SmallFeedBox'\nimport {refactorTitle} from \"../../../api/ApiUtils\";\n\nconst styles = theme => ({\n    root: {},\n    smallDiv: {\n        height: '200px',\n\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n    },\n    bigDiv: {\n        height: '400px',\n\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n\n\n    },\n    left: {\n        paddingRight: 20,\n        paddingLeft: 30,\n\n    },\n    right: {\n        paddingLeft: 20,\n        paddingRight: 30,\n    }\n});\n\n\nclass FeedsWall extends React.Component {\n\n\n    render() {\n        const {classes, data,} = this.props;\n        return (data.length) ? <Grid container alignItems={'stretch'} className={classes.root}>\n            <Grid item md={6} className={classes.left}>\n                <BigFeedBox\n                    link={'/feeds/' + data[0].id}\n\n                    backgroundImg={data[0].sections[0].medias[0].url}\n                    title={refactorTitle(data[0].sections[0].title)}\n\n                />\n                {data[1] && <SmallFeedBox\n                    link={'/feeds/' + data[1].id}\n\n                    left={<div style={{\n                        height: '300px',\n                        backgroundSize: 'cover',\n                        backgroundImage: 'url(' + data[1].sections[0].medias[0].url + ')',\n                        width: '100%',\n                        backgroundPosition: 'center'\n                    }}></div>}\n                    right={<div style={{textAlign: 'center'}}>\n                        <Typography\n                            style={{padding: '0 20px'}}\n                            variant={'subheading'}\n                        >\n                            {data[1].sections[0].title}      </Typography>\n                        <br/>\n                        <Typography\n                            style={{padding: '0 20px', color: 'rgb(159, 159, 159)'}}\n                        >\n                            {data[1].sections[0].description}</Typography>\n\n                    </div>}\n\n                />}\n            </Grid>\n            <Grid item md={6} className={classes.right}>\n                {data[2] && <SmallFeedBox\n                    link={'/feeds/' + data[2].id}\n\n                    right={<div style={{\n                        height: '300px',\n                        backgroundSize: 'cover',\n                        backgroundImage: 'url(' + data[2].sections[0].medias[0].url + ')',\n                        width: '100%',\n                        backgroundPosition: 'center'\n                    }}></div>}\n                    left=\n                        {(<div style={{textAlign: 'center'}}>\n                            <Typography\n                                style={{padding: '0 20px'}}\n\n                                variant={'subheading'}\n                            >\n                                {data[2].sections[0].title}</Typography>\n                            <br/>\n                            <Typography\n                                style={{padding: '0 20px', color: 'rgb(159, 159, 159)'}}\n                            >\n                                {data[2].sections[0].description}</Typography>\n                        </div>)}\n\n                />}\n                {data[3] && <BigFeedBox\n                    link={'/feeds/' + data[3].id}\n                    title={refactorTitle(data[3].sections[0].title)}\n                    backgroundImg={data[3].sections[0].medias[0].url}\n\n                />}\n            </Grid>\n        </Grid> : null\n    }\n\n\n}\n\nFeedsWall.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FeedsWall)","import {isImgOnlySections, redirectUrl} from \"../../../api/ApiUtils\";\nimport React, {Fragment} from 'react';\nimport {Grid} from '@material-ui/core';\nimport Carousel from '../../Widget/Slick/SingleItem'\nimport FeedsWall from '../../Widget/FeedsWall/Wrapper'\n\nconst Banner = props => {\n\n    const {\n        hasFeedsToShow,latestArticle,feeds,history\n    }= props\n    return hasFeedsToShow && <Fragment>\n        <Grid item xs={12}>\n            <Carousel\n                data={latestArticle.map(n => n.sections[0].medias[0])}\n                title={latestArticle.map(n => n.sections[0].title) || ''}\n                onClick={() => redirectUrl(`/feeds/${latestArticle.id}`,history)}/>\n        </Grid>\n        <Grid item xs={12} style={{marginTop: 80}}>\n            <FeedsWall\n                data={feeds.filter((n, i) => isImgOnlySections(n.sections))}\n            />\n        </Grid>\n    </Fragment>\n\n}\n\n\nexport default Banner\n"],"sourceRoot":""}